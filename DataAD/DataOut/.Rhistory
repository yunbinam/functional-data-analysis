tb2
data1 <- read_excel("DataFile1.xls")
data2 <- read_excel("DataFile2.xls")
data3 <- read_excel("DataFile3.xls")
data <- merge(data1, data2, by = "id") # wide
data <- data.frame(sapply(data, as.numeric)) # n = 1922
# exploratory analysis about missing data
# apply(data, 2, function(x) sum(is.na(x))) # 6,7,9,11,12
# apply(data[,c(6,7,9,11,12)], 2, function(x) table(data$sex[is.na(x)]))
incomplete <- data[is.na(data$bmi)|is.na(data$smoker)|(is.na(data$pstmp)&data$sex==0),] # n = 20
data <- data[!(is.na(data$bmi)|is.na(data$smoker)|(is.na(data$pstmp)&data$sex==0)),] # n = 1902
# male - missing
data$pstmp[data$sex==1] <- 0
data$hrt[data$sex==1] <- 0
data$oc[data$sex==1] <- 0
data <- data %>%
mutate(female=ifelse(sex==0, 1, 0))
data <- data %>%
mutate(female_mp=factor(paste(data$female, data$pstmp, sep=",")))
data <- data %>%
mutate(male_nomp=factor(paste(data$sex, data$pstmp, sep=",")))
data$ttodeath <- ifelse(!is.na(data$ttodeath),data$ttodeath, 0)
data$ttorec <- ifelse(!is.na(data$ttorec), data$ttorec, 0)
data <- data %>% mutate(obstime=365)
data$obstime[data$ttorec==0 & data$ttodeath!=0] <- data$ttodeath[data$ttorec==0 & data$ttodeath!=0]
data$obstime[data$ttorec!=0 & data$ttodeath==0] <- data$ttorec[data$ttorec!=0 & data$ttodeath==0]
data$obstime[data$ttorec!=0 & data$ttodeath!=0] <- data$ttorec[data$ttorec!=0 & data$ttodeath!=0]
data$event <- ifelse(data$recvte==1|data$death==1, 1, 0)
data.test <- merge(data, data3, by="id")
data.test <- data.test %>%
mutate(event2=ifelse(recvte2==1|death2==1, 1, 0))
surv_object <- Surv(time=data$obstime, event=data$event)
# log-rank test
rank <- survdiff(surv_object ~ sex, data = data)
# cox proportional-hazard
fit1.coxph <- coxph(surv_object ~ as.factor(sex), data = data)
fit2.coxph <- coxph(surv_object ~ as.factor(female_mp), data = data)
fit3.coxph <- coxph(surv_object ~ as.factor(male_nomp), data = data)
exp(as.numeric(fit3.coxph$coefficients[3])+c(-1,1)*fit3.coxph$var[3,3]*qnorm(0.975))
fit1.coxph
surv_object
tb2
tb1
tb1
tb
aux1 <- data[data$event==0,]
aux2 <- data[data$event==1,]
tb <- as.data.frame(matrix(NA, nrow=18, 4))
names(tb) <- c(" ", " ", "(n = 238)", "(n = 1664)")
tb[,1] <- c(rep("vte_type", 3), "age", "sex", rep("race",4), rep("pstmp",2), "bmi", "act", rep("smoker",2), "priorcvd", "hrt", "oc")
tb[,2] <- c("DVT", "PE", "both", " ", "Male", "African American", "White/Caucasian", "Other", "Unknown", "Post-menopausal", "Peri-menopausal", " ", "ACT therapy", "Current", "Former", "Previous CVD", "Hormone therapy", "Oral contraceptive")
aux <- data %>% group_by(event) %>% summarise(
n.vte1=sum(vte_type==1), prop.vte1=mean(vte_type==1),
n.vte2=sum(vte_type==2), prop.vte2=mean(vte_type==2),
n.vte3=sum(vte_type==3), prop.vte3=mean(vte_type==3),
mean.age=mean(age), sd.age=sd(age),
n.male=sum(sex==1), prop.male=mean(sex==1),
n.aa=sum(race==0), prop.aa=mean(race==0),
n.whc=sum(race==1), prop.whc=mean(race==1),
n.etc=sum(race==2), prop.etc=mean(race==2),
n.miss=sum(race==9), prop.miss=mean(race==9),
n.post=sum(pstmp==1), prop.post=mean(pstmp==1),
n.peri=sum(pstmp==2), prop.peri=mean(pstmp==2),
mean.bmi=mean(bmi), sd.bmi=sd(bmi),
n.act=sum(act==1), prop.act=mean(act==1),
n.cur=sum(smoker==1), prop.cur=mean(smoker==1),
n.form=sum(smoker==2), prop.form=mean(smoker==2),
n.cvd=sum(priorcvd==1), prop.cvd=mean(priorcvd==1),
n.hrt=sum(hrt==1), prop.hrt=mean(hrt==1),
n.oc=sum(oc==1), prop.oc=mean(oc==1)
)
aux <- round(aux[,-1],2)
tb[,3] <- c(paste0(aux[1,1], " (", aux[1,2], ")"), paste0(aux[1,3], " (", aux[1,4], ")"), paste0(aux[1,5], " (", aux[1,6], ")"), paste0(aux[1,7], " (", aux[1,8], ")"), paste0(aux[1,9], " (", aux[1,10], ")"),paste0(aux[1,11], " (", aux[1,12], ")"), paste0(aux[1,13], " (", aux[1,14], ")"), paste0(aux[1,15], " (", aux[1,16], ")"), paste0(aux[1,17], " (", aux[1,18], ")"), paste0(aux[1,19], " (", aux[1,20], ")"), paste0(aux[1,21], " (", aux[1,22], ")"), paste0(aux[1,23], " (", aux[1,24], ")"), paste0(aux[1,25], " (", aux[1,26], ")"), paste0(aux[1,27], " (", aux[1,28], ")"), paste0(aux[1,29], " (", aux[1,30], ")"), paste0(aux[1,31], " (", aux[1,32], ")"), paste0(aux[1,33], " (", aux[1,34], ")"),paste0(aux[1,35], " (", aux[1,36], ")"))
tb[,4] <- c(paste0(aux[2,1], " (", aux[2,2], ")"), paste0(aux[2,3], " (", aux[2,4], ")"), paste0(aux[2,5], " (", aux[2,6], ")"), paste0(aux[2,7], " (", aux[2,8], ")"), paste0(aux[2,9], " (", aux[2,10], ")"),paste0(aux[2,11], " (", aux[2,12], ")"), paste0(aux[2,13], " (", aux[2,14], ")"), paste0(aux[2,15], " (", aux[2,16], ")"), paste0(aux[2,17], " (", aux[2,18], ")"), paste0(aux[2,19], " (", aux[2,20], ")"), paste0(aux[2,21], " (", aux[2,22], ")"), paste0(aux[2,23], " (", aux[2,24], ")"), paste0(aux[2,25], " (", aux[2,26], ")"), paste0(aux[2,27], " (", aux[2,28], ")"), paste0(aux[2,29], " (", aux[2,30], ")"), paste0(aux[2,31], " (", aux[2,32], ")"), paste0(aux[2,33], " (", aux[2,34], ")"),paste0(aux[2,35], " (", aux[2,36], ")"))
tb
length(data[sex==0,])
length(data(data$sex==0,])
1902-874
tb
tb2
173+831+24
?histogram
plot(event ~ age, data=data)
plot(event==1 ~ age, data=data)
plot((event==1) ~ age, data=data)
plot(data$age, data$event==1)
plot(time ~ age, data=data)
plot(obstime~age, data=data)
plot(obstime~age, data=data)
library(ggplot2)
ggplot(data=data, aes(x=age, y=obstime))+
geom_line()
ggplot(data=data, aes(x=age, y=obstime))+
geom_line(aes(age, obstime), data= data)
ggplot(data=data, aes(x=age, y=obstime))+
geom_point(aes(age, mean(obstime)))
fit3.coxph
ggplot(data=data, aes(x=age, fill=event))+
geom_histogram(color="#e9ecef", alpha=0.6, position = 'identity') +
scale_fill_manual(values=c("#69b3a2", "#404080")) +
theme_ipsum() +
labs(fill="")
ggplot(data=data, aes(x=age, fill=event))+
geom_histogram(color="#e9ecef", alpha=0.6, position = 'identity') +
scale_fill_manual(values=c("#69b3a2", "#404080"))
table(data$event()
)
table(data$event)
ggplot(data=data, aes(x=age, fill=event))+
geom_histogram() +
scale_fill_manual(values=c("#69b3a2", "#404080"))
ggplot(data=data, aes(x=age, fill=event))+
geom_histogram(color="#e9ecef", alpha=0.6, position = 'identity') +
scale_fill_manual(values=c("#69b3a2", "#404080"))
ggplot(data=data, aes(x=age, group=event, fill=event))+
geom_histogram(position="dodge",binwidth=0.25)+theme_bw()
ggplot(data=data, aes(x=age, group=event, fill=as.factor(event)))+
geom_histogram(position="dodge",binwidth=0.25)+theme_bw()
summary(fit1.coxph)
summary(fit1.coxph)$coefficients
aux1$coef
knitr::opts_chunk$set(echo = FALSE, eval = TRUE, warning = FALSE, fig.align = 'center')
library("readxl")
library(survival)
library(survminer)
library(dplyr)
library(kableExtra)
library(caret)
options(knitr.kable.NA = '')
# setwd("/Users/yunbi/Downloads/579")
get_best_result = function(caret_fit) {
best = which(rownames(caret_fit$results) == rownames(caret_fit$bestTune))
best_result = caret_fit$results[best, ]
rownames(best_result) = NULL
best_result
}
aux1 <- summary(fit1.coxph)$coefficients
aux1$coef
aux1
aux1[1]
restab1 <- round(aux1[c(1:3,5)],3)
restab1
restab1 <- round(aux1[c(1:3,5)],3)
restab1 <- cbind(restab1, round(exp(aux1[1] + qnorm(.025)*aux1[3]),3))
restab1 <- cbind(restab1, round(exp(aux1[1] + qnorm(.975)*aux1[3]),3))
restab1
restab1
restab1 <- round(aux1[c(1:3,5)],3)
restab1
restab1 <- round(aux1[,c(1:3,5)],3)
restab1
restab1 <- cbind(restab1, round(exp(aux1[1] + qnorm(.025)*aux1[3]),3))
restab1 <- cbind(restab1, round(exp(aux1[1] + qnorm(.975)*aux1[3]),3))
restab1
restab1 <- round(aux1[,c(1:3,5)],3)
round(exp(aux1[1] + qnorm(.025)*aux1[3]),3)
restab1
class(restab1)
knitr::opts_chunk$set(echo = FALSE, eval = TRUE, warning = FALSE, fig.align = 'center')
library("readxl")
library(survival)
library(survminer)
library(dplyr)
library(kableExtra)
library(caret)
options(knitr.kable.NA = '')
# setwd("/Users/yunbi/Downloads/579")
get_best_result = function(caret_fit) {
best = which(rownames(caret_fit$results) == rownames(caret_fit$bestTune))
best_result = caret_fit$results[best, ]
rownames(best_result) = NULL
best_result
}
restab1 <- as.data.frame(round(aux1[,c(1:3,5)],3))
restab1
restab1 <- as.matrix(round(aux1[,c(1:3,5)],3), ncol=3)
restab1
restab1 <- as.matrix(round(aux1[,c(1:3,5)],3), ncol=4)
restab1
restab1 <- as.matrix(round(aux1[,c(1:3,5)],3), nrow=4)
restab1
restab1 <- matrix(round(aux1[,c(1:3,5)],3), nrow=4)
rrestab1
restab1
restab1 <- matrix(round(aux1[,c(1:3,5)],3), ncol=4)
restab1
restab1 <- as.data.frame(matrix(round(aux1[,c(1:3,5)],3), ncol=4))
restab1
restab1 <- cbind(restab1, round(exp(aux1[1] + qnorm(.025)*aux1[3]),3))
restab1 <- cbind(restab1, round(exp(aux1[1] + qnorm(.975)*aux1[3]),3))
restab1
restab1 <- cbind("sex", restab1)
restab1
aux1
aux1 <- summary(fit1.coxph)$coefficients
restab1 <- as.data.frame(matrix(round(aux1[,c(1:3,5)],3), ncol=4))
restab1 <- cbind(restab1, round(exp(aux1[1] + qnorm(.025)*aux1[3]),3))
restab1 <- cbind(restab1, round(exp(aux1[1] + qnorm(.975)*aux1[3]),3))
restab1 <- cbind("sex", restab1)
names(restab1) <- c("Estimate", "Coefficient", "e(Coefficient)", "SE", "p-value", "e(95% CI lower)", "e(95% CI upper)")
restab1
aux2 <- summary(fit3.coxph)$coefficients
aux2
restab2 <- as.data.frame(matrix(round(aux2[,c(1:3,5)],3), ncol=4))
restab2
restab2 <- cbind(restab2, round(exp(aux2[,1] + qnorm(.025)*aux2[,3]),3))
restab2
restab2 <- cbind(restab1, round(exp(aux2[,1] + qnorm(.975)*aux2[,3]),3))
restab2 <- cbind(c("female, post", "female, peri", "male, no"), restab1)
restab2
aux2 <- summary(fit3.coxph)$coefficients
restab2 <- as.data.frame(matrix(round(aux2[,c(1:3,5)],3), ncol=4))
restab2 <- cbind(restab2, round(exp(aux2[,1] + qnorm(.025)*aux2[,3]),3))
restab2 <- cbind(restab1, round(exp(aux2[,1] + qnorm(.975)*aux2[,3]),3))
restab2 <- cbind(c("female, post", "female, peri", "male, no"), restab2)
names(restab2) <- c("Estimate", "Coefficient", "e(Coefficient)", "SE", "p-value", "e(95% CI lower)", "e(95% CI upper)")
restab2
aux2 <- summary(fit3.coxph)$coefficients
restab2 <- as.data.frame(matrix(round(aux2[,c(1:3,5)],3), ncol=4))
restab2
restab2 <- cbind(restab2, round(exp(aux2[,1] + qnorm(.025)*aux2[,3]),3))
restab2 <- cbind(restab1, round(exp(aux2[,1] + qnorm(.975)*aux2[,3]),3))
restab2 <- cbind(c("female, post", "female, peri", "male, no"), restab2)
restab2
aux2 <- summary(fit3.coxph)$coefficients
restab2 <- as.data.frame(matrix(round(aux2[,c(1:3,5)],3), ncol=4))
restab2 <- cbind(restab2, round(exp(aux2[,1] + qnorm(.025)*aux2[,3]),3))
restab2 <- cbind(restab2, round(exp(aux2[,1] + qnorm(.975)*aux2[,3]),3))
restab2 <- cbind(c("female, post", "female, peri", "male, no"), restab2)
names(restab2) <- c("Estimate", "Coefficient", "e(Coefficient)", "SE", "p-value", "e(95% CI lower)", "e(95% CI upper)")
restab2
rownames(restab2) <- NA
rownames(restab2) <- NULL
restab2
calc_acc(actual=data.test$event,predicted = predict(elnet, newdata=data.test))
library(float)
calc_acc(actual=data.test$event,predicted = predict(elnet, newdata=data.test))
knitr::opts_chunk$set(echo = FALSE, eval = TRUE, warning = FALSE, fig.align = 'center')
library("readxl")
library(survival)
library(survminer)
library(dplyr)
library(kableExtra)
library(caret)
options(knitr.kable.NA = '')
# setwd("/Users/yunbi/Downloads/579")
get_best_result = function(caret_fit) {
best = which(rownames(caret_fit$results) == rownames(caret_fit$bestTune))
best_result = caret_fit$results[best, ]
rownames(best_result) = NULL
best_result
}
data1 <- read_excel("DataFile1.xls")
data2 <- read_excel("DataFile2.xls")
data3 <- read_excel("DataFile3.xls")
data <- merge(data1, data2, by = "id") # wide
data <- data.frame(sapply(data, as.numeric)) # n = 1922
# exploratory analysis about missing data
# apply(data, 2, function(x) sum(is.na(x))) # 6,7,9,11,12
# apply(data[,c(6,7,9,11,12)], 2, function(x) table(data$sex[is.na(x)]))
incomplete <- data[is.na(data$bmi)|is.na(data$smoker)|(is.na(data$pstmp)&data$sex==0),] # n = 20
data <- data[!(is.na(data$bmi)|is.na(data$smoker)|(is.na(data$pstmp)&data$sex==0)),] # n = 1902
# male - missing
data$pstmp[data$sex==1] <- 0
data$hrt[data$sex==1] <- 0
data$oc[data$sex==1] <- 0
data <- data %>%
mutate(female=ifelse(sex==0, 1, 0))
data <- data %>%
mutate(female_mp=factor(paste(data$female, data$pstmp, sep=",")))
data <- data %>%
mutate(male_nomp=factor(paste(data$sex, data$pstmp, sep=",")))
data$ttodeath <- ifelse(!is.na(data$ttodeath),data$ttodeath, 0)
data$ttorec <- ifelse(!is.na(data$ttorec), data$ttorec, 0)
data <- data %>% mutate(obstime=365)
data$obstime[data$ttorec==0 & data$ttodeath!=0] <- data$ttodeath[data$ttorec==0 & data$ttodeath!=0]
data$obstime[data$ttorec!=0 & data$ttodeath==0] <- data$ttorec[data$ttorec!=0 & data$ttodeath==0]
data$obstime[data$ttorec!=0 & data$ttodeath!=0] <- data$ttorec[data$ttorec!=0 & data$ttodeath!=0]
data$event <- ifelse(data$recvte==1|data$death==1, 1, 0)
data.test <- merge(data, data3, by="id")
data.test <- data.test %>%
mutate(event2=ifelse(recvte2==1|death2==1, 1, 0))
set.seed(1)
cv_10=trainControl(method="cv", number=10)
data.train <- data[,c(2:12, 21)]
data.test <- data.test[,c(2:12,27)]
colnames(data.test) <- colnames(data.train)
data.train$event <- factor(data.train$event)
data.test$event <- factor(data.test$event)
elnet=train(
event~., data=data.train,
method="glmnet",
trControl=cv_10,
tuneLength=10
)
get_best_result(elnet)
calc_acc = function(actual, predicted) {
mean(actual == predicted)
}
calc_acc(actual = data.test$event,
predicted = predict(elnet, newdata=data.test))
elnet=train(
event~., data=data.train,
method="glmnet",
trControl=cv_10,
tuneLength=10
)
get_best_result(elnet)
calc_acc = function(actual, predicted) {
mean(actual == predicted)
}
calc_acc(actual = data.test$event,
predicted = predict(elnet, newdata=data.test))
elnet=train(
event~., data=data.train,
method="glmnet",
trControl=cv_10,
tuneLength=10
)
get_best_result(elnet)
calc_acc = function(actual, predicted) {
mean(actual == predicted)
}
calc_acc(actual = data.test$event,
predicted = predict(elnet, newdata=data.test))
elnet=train(
event~., data=data.train,
method="glmnet",
trControl=cv_10,
tuneLength=10
)
get_best_result(elnet)
calc_acc = function(actual, predicted) {
mean(actual == predicted)
}
calc_acc(actual = data.test$event,
predicted = predict(elnet, newdata=data.test))
train=(Year<2005)
library(ISLM)
library(ISLR)
attach(Smarket)
train=(Year<2005)
Smarket.2005=Smarket[!train,]
dim(Smarket.2005)
Direction.2005=Direction[!train]
table(Year)
glm.fit=glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume, data=Smarket, familly=binomial, subset=train)
glm.fit=glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume, data=Smarket, family=binomial, subset=train)
glm.probs=predict(glm.fit, Smarket.2005,type='response')
glm.pred=rep("Down", 252)
glm.pred[glm.probs>.5]="Up"
table(glm.pred, Direction.2005)
mean(glm.pred==Direction.2005)
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/yunbi/Library/Mobile Documents/com~apple~CloudDocs/20_6_summer/Noah")
data=read.csv("liver.csv") # 22277 features and 357 observations
table(data$type) # HCC: 181, normal: 176
setwd("/Users/yunbi/Library/Mobile Documents/com~apple~CloudDocs/20_6_summer/Noah")
setwd("/Users/yunbi/Downloads/20_6_summer/Noah")
getwd()
rm(list=ls())
setwd("/Users/yunbi/Library/Mobile Documents/com~apple~CloudDocs/20_6_summer/Noah")
rm(list=ls())
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/yunbi/Library/Mobile Documents/com~apple~CloudDocs/20_6_summer/Noah")
C:\Program Files\RStudio\bin\rstudio.exe --max-ppsize=
500000
C:\Program Files\RStudio\bin\rstudio.exe --max-ppsize=500000
C:\Program Files\RStudio\bin\rstudio.exe --max-ppsize=500000
options(expressions = 5e5)
?laplacian
install.packages("FusedPCA")
library(igraph)
install.packages("igraph")
A <- matrix(c(0,1,1,0,1,0,1,1,1,1,0,0,0,1,0,0), ncol=4)
A
laplacian_matrix(A)
library(igraph)
laplacian_matrix(A)
laplacian_matrix(A)
A
g <- make_ring(10)
g
?matrixLaplacian
?make_ring
laplacian_matrix(g)
adj[1:13,1:13]
library(Rvcg)
library(rgl)
library(shapes)
library(Matrix)
library(dplyr)
library(igraph)
setwd('/Users/yunbi/Library/Mobile Documents/com~apple~CloudDocs/20_6_summer/Eardi/brain-master/az_and_coords/brain/DataAD/DataOut')
p=32492
shape_files = grep('^A.+L\\.midthickness\\.32k_fs_LR\\.ply$', list.files(), value=TRUE)
thickness_files = grep('^A.+L\\.thickness\\.32k_fs_LR\\.func\\.1D', list.files(), value=TRUE)
rid = gsub(".L.+", "", shape_files)
rid = as.numeric(gsub("A0+", "", rid))
az = read.csv('DXSUM_PDXCONV_ADNIALL.csv', header=TRUE)
az_dgn = az[az$VISCODE=="bl", c("RID", "VISCODE", "DXCURREN")]
az_dgn = az_dgn[az_dgn$RID %in% rid, ]
y = matrix(az_dgn$DXCURREN, nrow=nrow(az_dgn)) # 88*1 vector
df = data.frame(rid = rid, sfiles = shape_files, tfiles = thickness_files)
df = df[df$rid %in% az_dgn$RID,]
proc = readRDS('proc123.rds')
setwd("/Users/yunbi/Library/Mobile Documents/com~apple~CloudDocs/20_6_summer/Eardi")
# coordinates after Procrustes analysis
proc = readRDS('proc123.rds')
proc_cd = proc$rotated
template = proc$mshape # 32492*3 (coordinates of nodes)
# triangle mesh (64980 triangles * 3 nodes)
trg = t(vcgPlyRead('A0002.L.midthickness.32k_fs_LR.ply', updateNormals = TRUE, clean = TRUE)$it)
setwd('/Users/yunbi/Library/Mobile Documents/com~apple~CloudDocs/20_6_summer/Eardi/brain-master/az_and_coords/brain/DataAD/DataOut')
# triangle mesh (64980 triangles * 3 nodes)
trg = t(vcgPlyRead('A0002.L.midthickness.32k_fs_LR.ply', updateNormals = TRUE, clean = TRUE)$it)
# f values (thickness) (88 subjects * 32492 nodes)
fdata = t(sapply(df$tfiles, function(x) as.matrix(read.csv(x, header = F))))
edge = matrix(0, nrow=nrow(trg)*3, ncol=2)
k = 1
for (i in 1:nrow(trg)){
tmp = trg[i,]
edge[k,1] = tmp[1]
edge[k,2] = tmp[2]
k = k+1
edge[k,1] = tmp[2]
edge[k,2] = tmp[3]
k = k+1
edge[k,1] = tmp[3]
edge[k,2] = tmp[1]
k = k+1
}
# adjacency matrix A (32492 nodes * 32492 nodes)
adj = sparseMatrix(i=edge[,1], j=edge[,2]) # FALSE (0) if there is no edge, TRUE (1) if there is an edge e_ij
adj[1:16,1:16]
# (undirected) graph laplacian matrix
# from (64980*3/2) undirected edges
graph_obj = graph_from_adjacency_matrix(adj, mode="undirected")
tmp <- matrix(sample(0:1, 100, replace=TRUE, prob=c(0.9,0.1)), nc=10)
tmp
g1 <- graph_from_adjacency_matrix(tmp)
g1
g1 <- graph_from_adjacency_matrix(tmp, mode="undirected")
g1
class(tmp)
class(adj)
adj[1:2,1:2]
graph_from_adjacency_matrix(data.frame(tmp))
adj
str(adj)
summary(adj)
str(summary(adj))
str(as.matrix(adj))
as.matrix(adj)[1:15,1:15]
# (undirected) graph laplacian matrix
# from (64980*3/2) undirected edges
graph_obj = graph_from_adjacency_matrix(as.matrix(adj), mode="undirected")
str(graph_obj)
graph_obj
lpl = laplacian_matrix(graph_obj)
lpl
lpl[1:5,1:5]
lpl[1:13,1:13]
tmpX=matrix(c(1,2,1,2,3,0), nrow=2, ncol=3)
tmpohm=matrix(c(3,-1,0,2,3,-1,0,0,3), nrow=3, ncol=3)
tmpy=matrix(c(1,3), nrow=2, ncol=1)
solve(t(tmpX) %*% tmpX + 1*tmpohm) %*% t(tmpX) %*% tmpy
solve(t(tmpX) %*% tmpX + c(1,3)*tmpohm) %*% t(tmpX) %*% tmpy
solve(t(tmpX) %*% tmpX + 3*tmpohm) %*% t(tmpX) %*% tmpy
lambda=c(1,3)
sapply(lambda, FUN=function(x) solve(t(tmpX) %*% tmpX + z*tmpohm) %*% t(tmpX) %*% tmpy)
sapply(lambda, FUN=function(x) solve(t(tmpX) %*% tmpX + x*tmpohm) %*% t(tmpX) %*% tmpy)
g <- make_ring(10)
laplacian_matrix(g)
laplacian_matrix(g) + matrix(rep(10, 100)
, nrow=10))
rep(10,100)
laplacian_matrix(g) + matrix(rep(10,100), nrow=10, ncol=10)
str(fdata)
88*2/3
rid
length(rid)
nrow(df)
head(df)
df$rid
az_dgn
head(az_dgn)
?sample
# 2/3 training data, 1/3 test data
train = sample(df$rid, size=2/3*length(df$rid))
train
length(train)
str(fdata)
df$rid
# 2/3 training data, 1/3 test data
train = sample(1:nrow(df), size=2/3*nrow(df))
test = -test
test = -train
train
f_train = fdata[train,]
str(f_train)
y_train = y[train,]
y
y_train
y_train = matrix(y[train,], nrow=length(train))
train = sample(1:nrow(df), size=2/3*nrow(df))
test = -train
f_train = fdata[train,]
y_train = matrix(y[train,], nrow=length(train))
64980*#
3
head(az)
